CXX = i686-w64-mingw32-g++
LD = i686-w64-mingw32-g++
WINDRES = i686-w64-mingw32-windres
CFLAGS = --std=c++11 -Wall
LDFLAGS = -mwindows
LIBS = -lmingw32 -lSDL2main -lSDL2 -lSDL2_net -lSDL2_image -lSDL2_mixer -lSDL2_ttf
NCLUDE = include
BIN_NAME = bomberman.exe

SOURCES = $(wildcard src/*.cpp)

CFLAGS_DEBUG = $(CFLAGS) -g
OBJ_DEBUG = win32/obj/Debug
BIN_DEBUG = win32/bin/Debug
LDFLAGS_DEBUG = $(LDFLAGS)

OBJECTS_DEBUG = $(patsubst src/%,$(OBJ_DEBUG)/%,$(SOURCES:.cpp=.o)) $(OBJ_DEBUG)/icon_rc.o
OUT_DEBUG = $(BIN_DEBUG)/$(BIN_NAME)

CFLAGS_RELEASE = $(CFLAGS) -O2
OBJ_RELEASE = win32/obj/Release
BIN_RELEASE = win32/bin/Release
LDFLAGS_RELEASE = $(LDGLAGS) -s

OBJECTS_RELEASE = $(patsubst src/%,$(OBJ_RELEASE)/%,$(SOURCES:.cpp=.o)) $(OBJ_RELEASE)/icon_rc.o
OUT_RELEASE = $(BIN_RELEASE)/$(BIN_NAME)

all: debug release

clean: clean_debug clean_release

debug: before_debug $(OUT_DEBUG) $(BIN_DEBUG)/resource.dat

before_debug:
	test -d $(BIN_DEBUG) || mkdir -p $(BIN_DEBUG)
	test -d $(OBJ_DEBUG) || mkdir -p $(OBJ_DEBUG)

$(OUT_DEBUG): $(OBJECTS_DEBUG)
	$(LD) -o $(OUT_DEBUG) $(OBJECTS_DEBUG) $(LDFLAGS_DEBUG) $(LIBS)

$(OBJ_DEBUG)/%.o: src/%.cpp $(INCLUDE)/%.h
	$(CXX) $(CFLAGS_DEBUG) -I$(INCLUDE) -c -o $@ $<

$(OBJ_DEBUG)/icon_rc.o: resource/icon.rc
	$(WINDRES) -i resource/icon.rc -o $(OBJ_DEBUG)/icon_rc.o

$(BIN_DEBUG)/resource.dat: utils/resource_pack resource/resource.txt
	utils/resource_pack resource/resource.txt $(BIN_RELEASE)/resource.dat

debug_clean: clean_debug

clean_debug:
	rm -f $(OUT_DEBUG)
	rm -f $(OBJECTS_DEBUG)

release: before_release $(OUT_RELEASE) $(BIN_RELEASE)/resource.dat

before_release:
	test -d $(BIN_RELEASE) || mkdir -p $(BIN_RELEASE)
	test -d $(OBJ_RELEASE) || mkdir -p $(OBJ_RELEASE)

$(OUT_RELEASE): $(OBJECTS_RELEASE)
	$(LD) -o $(OUT_RELEASE) $(OBJECTS_RELEASE) $(LDFLAGS_RELEASE) $(LIBS)

$(OBJ_RELEASE)/%.o: src/%.cpp $(INCLUDE)/%.h
	$(CXX) $(CFLAGS_RELEASE) -I$(INCLUDE) -c -o $@ $<

$(OBJ_RELEASE)/icon_rc.o: resource/icon.rc
	$(WINDRES) -i resource/icon.rc -o $(OBJ_RELEASE)/icon_rc.o

$(BIN_RELEASE)/resource.dat: utils/resource_pack resource/resource.txt
	utils/resource_pack resource/resource.txt $(BIN_RELEASE)/resource.dat

utils/resource_pack: utils/resource_pack.cpp
	g++ --std=c++11 -Wall -g -o utils/resource_pack utils/resource_pack.cpp

release_clean: clean_release

clean_release:
	rm -f $(OUT_RELEASE)
	rm -f $(OBJECTS_RELEASE)

